//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoreSharp.Analyzer.NHibernate.PluralizeService.Core.Properties {
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PluralizationService.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No sources have been configured for the builder. Add at least one source before attempting to build anything..
        /// </summary>
        internal static string BuilderBase_NoSources {
            get {
                return ResourceManager.GetString("BuilderBase_NoSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An adapter was not found that matched the given culture: &apos;{0}&apos;! Check the builder configuration for a missing provider reference..
        /// </summary>
        internal static string DefaultPluralizationApi_AdapterNotFound {
            get {
                return ResourceManager.GetString("DefaultPluralizationApi_AdapterNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No meta-data sources have been configured for the pluralization builder. Add at least one meta-data source before attempting to build a PluralizationApi instance!.
        /// </summary>
        internal static string DefaultPluralizationApi_NoMetaDataSources {
            get {
                return ResourceManager.GetString("DefaultPluralizationApi_NoMetaDataSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument may not contain an empty collection!.
        /// </summary>
        internal static string Guard_ArgEmptyCollection {
            get {
                return ResourceManager.GetString("Guard_ArgEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must be greater than  {0}!.
        /// </summary>
        internal static string Guard_ArgGreaterThan {
            get {
                return ResourceManager.GetString("Guard_ArgGreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must not be FALSE!.
        /// </summary>
        internal static string Guard_ArgIsFalse {
            get {
                return ResourceManager.GetString("Guard_ArgIsFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must not be TRUE!.
        /// </summary>
        internal static string Guard_ArgIsTrue {
            get {
                return ResourceManager.GetString("Guard_ArgIsTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must not be less than {0}!.
        /// </summary>
        internal static string Guard_ArgLessThan {
            get {
                return ResourceManager.GetString("Guard_ArgLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must contain a value &gt; 0!.
        /// </summary>
        internal static string Guard_ArgLessThanEqualZero {
            get {
                return ResourceManager.GetString("Guard_ArgLessThanEqualZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must contain a value &gt;= 0!.
        /// </summary>
        internal static string Guard_ArgLessThanZero {
            get {
                return ResourceManager.GetString("Guard_ArgLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must contain an empty collection!.
        /// </summary>
        internal static string Guard_ArgNotEmptyCollection {
            get {
                return ResourceManager.GetString("Guard_ArgNotEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument may not contain a null value!.
        /// </summary>
        internal static string Guard_ArgNotNull {
            get {
                return ResourceManager.GetString("Guard_ArgNotNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must be null or empty!.
        /// </summary>
        internal static string Guard_ArgNotNullOrEmpty {
            get {
                return ResourceManager.GetString("Guard_ArgNotNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument is not a readable stream!.
        /// </summary>
        internal static string Guard_ArgNotReadable {
            get {
                return ResourceManager.GetString("Guard_ArgNotReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument is not a writable stream!.
        /// </summary>
        internal static string Guard_ArgNotWritable {
            get {
                return ResourceManager.GetString("Guard_ArgNotWritable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must contain a zero!.
        /// </summary>
        internal static string Guard_ArgNotZero {
            get {
                return ResourceManager.GetString("Guard_ArgNotZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument may not be null or empty!.
        /// </summary>
        internal static string Guard_ArgNullOrEmpty {
            get {
                return ResourceManager.GetString("Guard_ArgNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument may not contain a zero!.
        /// </summary>
        internal static string Guard_ArgZero {
            get {
                return ResourceManager.GetString("Guard_ArgZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument may not contain an empty GUID!.
        /// </summary>
        internal static string Guard_EmptyGuid {
            get {
                return ResourceManager.GetString("Guard_EmptyGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument contains an invalid file extension!.
        /// </summary>
        internal static string Guard_InvalidExtension {
            get {
                return ResourceManager.GetString("Guard_InvalidExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument contains an invalid file path!.
        /// </summary>
        internal static string Guard_InvalidFilePath {
            get {
                return ResourceManager.GetString("Guard_InvalidFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument contains an invalid folder path!.
        /// </summary>
        internal static string Guard_InvalidFolderPath {
            get {
                return ResourceManager.GetString("Guard_InvalidFolderPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument is not a well formed URI!.
        /// </summary>
        internal static string Guard_MalformedUri {
            get {
                return ResourceManager.GetString("Guard_MalformedUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument should contain an empty GUID!.
        /// </summary>
        internal static string Guard_NotEmptyGuid {
            get {
                return ResourceManager.GetString("Guard_NotEmptyGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument contains a missing type!.
        /// </summary>
        internal static string Guard_TypeIsMissing {
            get {
                return ResourceManager.GetString("Guard_TypeIsMissing", resourceCulture);
            }
        }
    }
}
